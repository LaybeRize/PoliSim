{{define "pageScript"}}
    <script>
        function copy(idFrom, idTo) {
            let copy = document.querySelector("#"+idFrom).cloneNode(true)
            copy.setAttribute("class", "name-list")
            copy.removeAttribute("id")
            document.querySelector("#"+idTo).insertAdjacentElement("beforebegin", copy)
        }

        function destroyParent(self) {
            self.parentElement.remove()
        }

        function copyElementValueAndAppendIt(idFrom, idTo) {
            let value = document.querySelector("#"+idTo).value
            if (value === "") {
                document.querySelector("#"+idTo).value = document.querySelector("#"+idFrom).value
            } else {
                document.querySelector("#"+idTo).value += "," + document.querySelector("#"+idFrom).value
            }
        }
    </script>
{{end}}
{{define "page"}}
    {{- /*gotype: PoliSim/handler.CreateVotePage*/ -}}
    <body id="page-body">
    {{template "header" .NavInfo}}
    <form hx-post="/create/discussion" hx-target="#page-body">
        <label for="title">Titel</label>
        <input id="title" name="title" type="text" value="{{.Title}}">
        <label for="author">Autor</label>
        <select id="author" name="author" hx-get="/organisations/for/account" hx-trigger="change" hx-target="#organisation">
            {{$author := .Author}}
            {{range .PossibleAuthors}}
                <option value="{{.}}" {{if eq . $author}}selected{{end}}>{{.}}</option>
            {{end}}
        </select>
        <label for="organisation">Organisation</label>
        {{template "organisationDropdown" .}}
        <label for="end-time">Ende der Abstimmung ({{.NavInfo.Account.TimeZone.String}})</label>
        <input  type="datetime-local"
                id="end-time"
                name="end-time"
                value="{{.DateTime}}"
                min="{{.MinTime}}"
                max="{{.MaxTime}}" />
        <label for="public">Diskussion ist öffentlich</label>
        <input type="checkbox" id="public" name="public" value="true" {{if .Public}}checked{{end}}>
        <label for="member">Alle Organisationsmitglieder dürfen teilnehmen</label>
        <input type="checkbox" id="member" name="member" value="true" {{if .LetMemberParticipate}}checked{{end}}>
        <label for="admin">Alle Organisationsadministratoren dürfen teilnehmen</label>
        <input type="checkbox" id="admin" name="admin" value="true" {{if .LetAdminsParticipate}}checked{{end}}>
        {{template "readerAndParticipants" .}}
        <datalist id="account-names">
            {{range .AccountNames}}
                <option>{{.}}</option>
            {{end}}
        </datalist>
        <label for="vote-choice">Abstimmungsliste</label>
        <select id="vote-choice" name="vote-choice">
            {{range .VoteChoice}}
                <option value="{{.ID}}">{{.Question}}</option>
            {{end}}
        </select>
        <button type="button" onclick="copyElementValueAndAppendIt('vote-choice', 'votes')">
            ID der ausgewählten Abstimmung übertragen
        </button>
        <label for="votes">Angehängte Abstimmungen</label>
        <input id="votes" name="votes" type="text" value="{{.VoteChoiceList}}">
        <label for="markdown">Inhalt</label>
        <textarea id="markdown" name="markdown" rows="10"
                  hx-trigger="keyup changed delay:1s" hx-put="/markdown"
                  hx-target="#markdown-box">
            {{- .Body -}}
        </textarea>
        <button hx-patch="/check/reader/and/participants" hx-target="#reader-and-participants">
            Leser und Teilnehmer überprüfen
        </button>
        <button type="submit">Dokument erstellen</button>
    </form>
    {{template "message" .}}
    <h1>Vorschau</h1>
    {{template "markdownBox" .}}
    </body>
{{end}}