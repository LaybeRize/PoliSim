{{define "pageScript"}}
    <script>
        function updateLinks(id) {
            document.querySelectorAll("a[data-link='" + id + "']").forEach(
                element => {element.removeAttribute("hx-get");
                    element.removeAttribute("hx-swap");
                    element.removeAttribute("hx-target");
                    element.removeAttribute("data-link");
                    element.setAttribute("href", "#" + id);
                    htmx.process(element);}
            );
        }

        function updateLinksAllEntriesElement() {
            if (loaded.length === 0) {
                return;
            }
            document.querySelector("#link-all-entries").href =
                "/create/note?loaded=" + loaded.join("&loaded=");
        }

        window.onload = function () {
            document.body.addEventListener("htmx:afterSwap", function (evt) {
                loaded.push(evt.detail.elt.previousElementSibling.id);
                loaded.forEach(element => (updateLinks(element)));
                updateLinksAllEntriesElement();
                evt.detail.elt.previousElementSibling.scrollIntoView({behavior: "smooth"});
            });

            document.body.addEventListener("htmx:configRequest", function (evt) {
                evt.detail.parameters['loaded'] = loaded;
            })

            document.body.addEventListener("htmx:afterRequest", function (evt) {
                if (evt.failed) {
                    alert({{/*noteView-1*/}}"Die Anfrage hat zu einem Fehler auf der Serverseite geführt")
                }
            })
        }
    </script>
{{end}}
{{define "page"}}
    {{- /*gotype: PoliSim/handler.NotesPage */ -}}
    <body id="page-body">
    {{template "header" .NavInfo}}
        <div class="block-view note">
            <a href="/create/note" id="link-all-entries" target="_blank">{{/*noteView-2*/}}Schreibe eine eigene Notiz zu allen offenen Beiträgen</a>
        </div>
    {{range .LoadedNotes}}
        {{block "singleNote" .}}
            {{- /*gotype: PoliSim/database.BlackboardNote*/ -}}
            {{$acc := .Viewer}}
            <div class="wrapper note" id="{{.ID}}">
                <hr style="width: var(--standard-width); margin: 0.3rem 0;">
                <div class="block-view">
                    <h1>{{.GetTitle $acc}}</h1>
                    <p>
                        {{/*noteView-3*/}}ID: {{.ID}}<br>
                        {{/*noteView-4*/}}Geschrieben von: {{.GetAuthor}}<br>
                        {{/*noteView-5*/}}<i>Veröffentlicht am: {{.GetTimePostedAt $acc}}</i>
                    </p>
                    {{if $acc.IsAtLeastAdmin}}
                        <a hx-patch="/change/blocked/note/{{.ID}}" hx-target="#{{.ID}}">{{/*noteView-6*/}}{{if .Removed}}Notiz wieder freigeben{{else}}Notiz blockieren{{end}}</a>
                    {{end}}
                </div>
                <div class="markdown {{if .Removed}}removed{{end}}">{{.GetBody $acc}}</div>
                <div class="block-view">
                    <a href="/create/note?loaded={{.ID}}" target="_blank">{{/*noteView-7*/}}Schreibe eine eigene Notiz zu diesem Beitrag</a>
                    {{if .HasParents}}
                        <h2>{{/*noteView-8*/}}Referenzen</h2>
                        {{range .Parents}}
                            {{- /*gotype: PoliSim/database.TruncatedBlackboardNotes*/ -}}
                            <a  data-link="{{.ID}}" hx-get="/notes/request?request={{.ID}}"
                                hx-target="#end-div" hx-swap="beforebegin">{{if .Removed}}{{/*noteView-9*/}}<strong>[Entfernt]</strong>
                                {{- else -}}
                                    {{/*noteView-10*/}}<strong>{{.Title}}</strong> von {{.Author}}{{end}}</a>
                        {{end}}
                    {{end}}
                    {{if .HasChildren}}
                        <h2>{{/*noteView-11*/}}Kommentare</h2>
                        {{range .Children}}
                            {{- /*gotype: PoliSim/database.TruncatedBlackboardNotes*/ -}}
                            <a  data-link="{{.ID}}" hx-get="/notes/request?request={{.ID}}"
                                hx-target="#end-div" hx-swap="beforebegin">{{if .Removed}}{{/*noteView-12*/}}<strong>[Entfernt]</strong>
                                {{- else -}}
                                    {{/*noteView-13*/}}<strong>{{.Title}}</strong> von {{.Author}}{{end}}</a>
                        {{end}}
                    {{end}}
                </div>
            </div>
        {{end}}
    {{end}}
    <div id="end-div" hidden></div>
    <script>
        let loaded = {{.LoadedNoteIDs}};

        loaded.forEach(element => (updateLinks(element)));
        updateLinksAllEntriesElement();
    </script>
    </body>
{{end}}